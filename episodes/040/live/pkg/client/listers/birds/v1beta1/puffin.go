// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/heptio/tgik/episodes/040/live/pkg/apis/birds/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PuffinLister helps list Puffins.
type PuffinLister interface {
	// List lists all Puffins in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.Puffin, err error)
	// Puffins returns an object that can list and get Puffins.
	Puffins(namespace string) PuffinNamespaceLister
	PuffinListerExpansion
}

// puffinLister implements the PuffinLister interface.
type puffinLister struct {
	indexer cache.Indexer
}

// NewPuffinLister returns a new PuffinLister.
func NewPuffinLister(indexer cache.Indexer) PuffinLister {
	return &puffinLister{indexer: indexer}
}

// List lists all Puffins in the indexer.
func (s *puffinLister) List(selector labels.Selector) (ret []*v1beta1.Puffin, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Puffin))
	})
	return ret, err
}

// Puffins returns an object that can list and get Puffins.
func (s *puffinLister) Puffins(namespace string) PuffinNamespaceLister {
	return puffinNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PuffinNamespaceLister helps list and get Puffins.
type PuffinNamespaceLister interface {
	// List lists all Puffins in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.Puffin, err error)
	// Get retrieves the Puffin from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.Puffin, error)
	PuffinNamespaceListerExpansion
}

// puffinNamespaceLister implements the PuffinNamespaceLister
// interface.
type puffinNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Puffins in the indexer for a given namespace.
func (s puffinNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.Puffin, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.Puffin))
	})
	return ret, err
}

// Get retrieves the Puffin from the indexer for a given namespace and name.
func (s puffinNamespaceLister) Get(name string) (*v1beta1.Puffin, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("puffin"), name)
	}
	return obj.(*v1beta1.Puffin), nil
}
